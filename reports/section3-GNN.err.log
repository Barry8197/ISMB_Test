Traceback (most recent call last):
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/barryryan/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/barryryan/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Example of one iteration of message passing
message_passing_iteration(G)

# Access updated node features after one iteration
for node in G.nodes:
    print("Node:", node, "Feature:", G.nodes[node]['feature'])
    
fig, axes = plt.subplots(1, 2, figsize=(10, 5))

node_colours_message = (pd.DataFrame(nx.get_node_attributes(G , 'feature')).T[0] > 0.5).replace(True , 'skyblue').replace(False , 'r')
np.random.seed(42)
nx.draw(G , ax=axes[0] , with_labels = True , node_color = node_colours_message)
axes[0].set_title('Karate Club Graph after 1 iteration of Message Passing')
#plt.show()

G_true = nx.karate_club_graph()
node_colours_true = pd.Series(nx.get_node_attributes(G_true , 'club')).replace('Mr. Hi' , 'r').replace('Officer' , 'skyblue')
# Draw Network
np.random.seed(42)
nx.draw(G_true , ax=axes[1] , with_labels = True , node_color = node_colours_true)
axes[1].set_title('True Karate Club Graph')
legend_handles = gen_graph_legend(node_colours_true , G_true , 'club')
axes[0].legend(handles = legend_handles)
axes[1].legend(handles = legend_handles)

# Adjust layout
plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[6], line 2[0m
[1;32m      1[0m [38;5;66;03m# Example of one iteration of message passing[39;00m
[0;32m----> 2[0m message_passing_iteration(G)
[1;32m      4[0m [38;5;66;03m# Access updated node features after one iteration[39;00m
[1;32m      5[0m [38;5;28;01mfor[39;00m node [38;5;129;01min[39;00m G[38;5;241m.[39mnodes:

Cell [0;32mIn[5], line 25[0m, in [0;36mmessage_passing_iteration[0;34m(G)[0m
[1;32m     23[0m updated_features [38;5;241m=[39m {}
[1;32m     24[0m [38;5;28;01mfor[39;00m node [38;5;129;01min[39;00m G[38;5;241m.[39mnodes:
[0;32m---> 25[0m     updated_features[node] [38;5;241m=[39m message_passing(node, G)
[1;32m     27[0m [38;5;66;03m# Update node features[39;00m
[1;32m     28[0m [38;5;250m[39m[38;5;124;03m'''[39;00m
[1;32m     29[0m [38;5;124;03m#################################################[39;00m
[1;32m     30[0m [38;5;124;03m               YOUR CODE HERE[39;00m
[0;32m   (...)[0m
[1;32m     35[0m [38;5;124;03mOur implemention took two lines of code but yours may differ.[39;00m
[1;32m     36[0m [38;5;124;03m'''[39;00m

Cell [0;32mIn[5], line 19[0m, in [0;36mmessage_passing[0;34m(node, G)[0m
[1;32m      6[0m [38;5;28;01melse[39;00m:
[1;32m      7[0m [38;5;250m    [39m[38;5;124;03m'''[39;00m
[1;32m      8[0m [38;5;124;03m    #################################################[39;00m
[1;32m      9[0m [38;5;124;03m                   YOUR CODE HERE[39;00m
[0;32m   (...)[0m
[1;32m     15[0m [38;5;124;03m    Our implemention took two lines of code but yours may differ.[39;00m
[1;32m     16[0m [38;5;124;03m    '''[39;00m
[0;32m---> 19[0m     [38;5;28;01mreturn[39;00m aggregated_message

[0;31mNameError[0m: name 'aggregated_message' is not defined
NameError: name 'aggregated_message' is not defined

