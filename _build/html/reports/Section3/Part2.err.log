Traceback (most recent call last):
  File "C:\Users\Barry\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\Barry\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Barry\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
w1 = loaded_data['DNAm_w1'].T.dropna() # we are only working with Wave 1 patients for this task
phenotypes = loaded_data['Phenotypes'].set_index('Sample_SentrixID').loc[w1.index] # get the phenotypes for the wave 1 patients
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mMemoryError[0m                               Traceback (most recent call last)
Input [1;32mIn [3][0m, in [0;36m<cell line: 1>[1;34m()[0m
[1;32m----> 1[0m w1 [38;5;241m=[39m [43mloaded_data[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mDNAm_w1[39;49m[38;5;124;43m'[39;49m[43m][49m[38;5;241;43m.[39;49m[43mT[49m[38;5;241;43m.[39;49m[43mdropna[49m[43m([49m[43m)[49m [38;5;66;03m# we are only working with Wave 1 patients for this task[39;00m
[0;32m      2[0m phenotypes [38;5;241m=[39m loaded_data[[38;5;124m'[39m[38;5;124mPhenotypes[39m[38;5;124m'[39m][38;5;241m.[39mset_index([38;5;124m'[39m[38;5;124mSample_SentrixID[39m[38;5;124m'[39m)[38;5;241m.[39mloc[w1[38;5;241m.[39mindex]

File [1;32m~\anaconda3\lib\site-packages\pandas\core\frame.py:6672[0m, in [0;36mDataFrame.dropna[1;34m(self, axis, how, thresh, subset, inplace, ignore_index)[0m
[0;32m   6670[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mcopy(deep[38;5;241m=[39m[38;5;28;01mNone[39;00m)
[0;32m   6671[0m [38;5;28;01melse[39;00m:
[1;32m-> 6672[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mloc[49m[43m([49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m[43m[[49m[43mmask[49m[43m][49m
[0;32m   6674[0m [38;5;28;01mif[39;00m ignore_index:
[0;32m   6675[0m     result[38;5;241m.[39mindex [38;5;241m=[39m default_index([38;5;28mlen[39m(result))

File [1;32m~\anaconda3\lib\site-packages\pandas\core\indexing.py:1192[0m, in [0;36m_LocationIndexer.__getitem__[1;34m(self, key)[0m
[0;32m   1190[0m maybe_callable [38;5;241m=[39m com[38;5;241m.[39mapply_if_callable(key, [38;5;28mself[39m[38;5;241m.[39mobj)
[0;32m   1191[0m maybe_callable [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_check_deprecated_callable_usage(key, maybe_callable)
[1;32m-> 1192[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_getitem_axis[49m[43m([49m[43mmaybe_callable[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m

File [1;32m~\anaconda3\lib\site-packages\pandas\core\indexing.py:1414[0m, in [0;36m_LocIndexer._getitem_axis[1;34m(self, key, axis)[0m
[0;32m   1412[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_slice_axis(key, axis[38;5;241m=[39maxis)
[0;32m   1413[0m [38;5;28;01melif[39;00m com[38;5;241m.[39mis_bool_indexer(key):
[1;32m-> 1414[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_getbool_axis[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m
[0;32m   1415[0m [38;5;28;01melif[39;00m is_list_like_indexer(key):
[0;32m   1416[0m     [38;5;66;03m# an iterable multi-selection[39;00m
[0;32m   1417[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28misinstance[39m(key, [38;5;28mtuple[39m) [38;5;129;01mand[39;00m [38;5;28misinstance[39m(labels, MultiIndex)):

File [1;32m~\anaconda3\lib\site-packages\pandas\core\indexing.py:1212[0m, in [0;36m_LocationIndexer._getbool_axis[1;34m(self, key, axis)[0m
[0;32m   1210[0m key [38;5;241m=[39m check_bool_indexer(labels, key)
[0;32m   1211[0m inds [38;5;241m=[39m key[38;5;241m.[39mnonzero()[[38;5;241m0[39m]
[1;32m-> 1212[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mobj[49m[38;5;241;43m.[39;49m[43m_take_with_is_copy[49m[43m([49m[43minds[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m

File [1;32m~\anaconda3\lib\site-packages\pandas\core\generic.py:4147[0m, in [0;36mNDFrame._take_with_is_copy[1;34m(self, indices, axis)[0m
[0;32m   4136[0m [38;5;129m@final[39m
[0;32m   4137[0m [38;5;28;01mdef[39;00m [38;5;21m_take_with_is_copy[39m([38;5;28mself[39m, indices, axis: Axis [38;5;241m=[39m [38;5;241m0[39m) [38;5;241m-[39m[38;5;241m>[39m Self:
[0;32m   4138[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[0;32m   4139[0m [38;5;124;03m    Internal version of the `take` method that sets the `_is_copy`[39;00m
[0;32m   4140[0m [38;5;124;03m    attribute to keep track of the parent dataframe (using in indexing[39;00m
[1;32m   (...)[0m
[0;32m   4145[0m [38;5;124;03m    See the docstring of `take` for full explanation of the parameters.[39;00m
[0;32m   4146[0m [38;5;124;03m    """[39;00m
[1;32m-> 4147[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtake[49m[43m([49m[43mindices[49m[38;5;241;43m=[39;49m[43mindices[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m)[49m
[0;32m   4148[0m     [38;5;66;03m# Maybe set copy if we didn't actually change the index.[39;00m
[0;32m   4149[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m2[39m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m result[38;5;241m.[39m_get_axis(axis)[38;5;241m.[39mequals([38;5;28mself[39m[38;5;241m.[39m_get_axis(axis)):

File [1;32m~\anaconda3\lib\site-packages\pandas\core\generic.py:4127[0m, in [0;36mNDFrame.take[1;34m(self, indices, axis, **kwargs)[0m
[0;32m   4122[0m     [38;5;66;03m# We can get here with a slice via DataFrame.__getitem__[39;00m
[0;32m   4123[0m     indices [38;5;241m=[39m np[38;5;241m.[39marange(
[0;32m   4124[0m         indices[38;5;241m.[39mstart, indices[38;5;241m.[39mstop, indices[38;5;241m.[39mstep, dtype[38;5;241m=[39mnp[38;5;241m.[39mintp
[0;32m   4125[0m     )
[1;32m-> 4127[0m new_data [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_mgr[49m[38;5;241;43m.[39;49m[43mtake[49m[43m([49m
[0;32m   4128[0m [43m    [49m[43mindices[49m[43m,[49m
[0;32m   4129[0m [43m    [49m[43maxis[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_block_manager_axis[49m[43m([49m[43maxis[49m[43m)[49m[43m,[49m
[0;32m   4130[0m [43m    [49m[43mverify[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[0;32m   4131[0m [43m[49m[43m)[49m
[0;32m   4132[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_constructor_from_mgr(new_data, axes[38;5;241m=[39mnew_data[38;5;241m.[39maxes)[38;5;241m.[39m__finalize__(
[0;32m   4133[0m     [38;5;28mself[39m, method[38;5;241m=[39m[38;5;124m"[39m[38;5;124mtake[39m[38;5;124m"[39m
[0;32m   4134[0m )

File [1;32m~\anaconda3\lib\site-packages\pandas\core\internals\managers.py:895[0m, in [0;36mBaseBlockManager.take[1;34m(self, indexer, axis, verify)[0m
[0;32m    892[0m indexer [38;5;241m=[39m maybe_convert_indices(indexer, n, verify[38;5;241m=[39mverify)
[0;32m    894[0m new_labels [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39maxes[axis][38;5;241m.[39mtake(indexer)
[1;32m--> 895[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mreindex_indexer[49m[43m([49m
[0;32m    896[0m [43m    [49m[43mnew_axis[49m[38;5;241;43m=[39;49m[43mnew_labels[49m[43m,[49m
[0;32m    897[0m [43m    [49m[43mindexer[49m[38;5;241;43m=[39;49m[43mindexer[49m[43m,[49m
[0;32m    898[0m [43m    [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m,[49m
[0;32m    899[0m [43m    [49m[43mallow_dups[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[0;32m    900[0m [43m    [49m[43mcopy[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[0;32m    901[0m [43m[49m[43m)[49m

File [1;32m~\anaconda3\lib\site-packages\pandas\core\internals\managers.py:688[0m, in [0;36mBaseBlockManager.reindex_indexer[1;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy, only_slice, use_na_proxy)[0m
[0;32m    681[0m     new_blocks [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_slice_take_blocks_ax0(
[0;32m    682[0m         indexer,
[0;32m    683[0m         fill_value[38;5;241m=[39mfill_value,
[0;32m    684[0m         only_slice[38;5;241m=[39monly_slice,
[0;32m    685[0m         use_na_proxy[38;5;241m=[39muse_na_proxy,
[0;32m    686[0m     )
[0;32m    687[0m [38;5;28;01melse[39;00m:
[1;32m--> 688[0m     new_blocks [38;5;241m=[39m [
[0;32m    689[0m         blk[38;5;241m.[39mtake_nd(
[0;32m    690[0m             indexer,
[0;32m    691[0m             axis[38;5;241m=[39m[38;5;241m1[39m,
[0;32m    692[0m             fill_value[38;5;241m=[39m(
[0;32m    693[0m                 fill_value [38;5;28;01mif[39;00m fill_value [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m blk[38;5;241m.[39mfill_value
[0;32m    694[0m             ),
[0;32m    695[0m         )
[0;32m    696[0m         [38;5;28;01mfor[39;00m blk [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mblocks
[0;32m    697[0m     ]
[0;32m    699[0m new_axes [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mself[39m[38;5;241m.[39maxes)
[0;32m    700[0m new_axes[axis] [38;5;241m=[39m new_axis

File [1;32m~\anaconda3\lib\site-packages\pandas\core\internals\managers.py:689[0m, in [0;36m<listcomp>[1;34m(.0)[0m
[0;32m    681[0m     new_blocks [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_slice_take_blocks_ax0(
[0;32m    682[0m         indexer,
[0;32m    683[0m         fill_value[38;5;241m=[39mfill_value,
[0;32m    684[0m         only_slice[38;5;241m=[39monly_slice,
[0;32m    685[0m         use_na_proxy[38;5;241m=[39muse_na_proxy,
[0;32m    686[0m     )
[0;32m    687[0m [38;5;28;01melse[39;00m:
[0;32m    688[0m     new_blocks [38;5;241m=[39m [
[1;32m--> 689[0m         [43mblk[49m[38;5;241;43m.[39;49m[43mtake_nd[49m[43m([49m
[0;32m    690[0m [43m            [49m[43mindexer[49m[43m,[49m
[0;32m    691[0m [43m            [49m[43maxis[49m[38;5;241;43m=[39;49m[38;5;241;43m1[39;49m[43m,[49m
[0;32m    692[0m [43m            [49m[43mfill_value[49m[38;5;241;43m=[39;49m[43m([49m
[0;32m    693[0m [43m                [49m[43mfill_value[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mfill_value[49m[43m [49m[38;5;129;43;01mis[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43mblk[49m[38;5;241;43m.[39;49m[43mfill_value[49m
[0;32m    694[0m [43m            [49m[43m)[49m[43m,[49m
[0;32m    695[0m [43m        [49m[43m)[49m
[0;32m    696[0m         [38;5;28;01mfor[39;00m blk [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mblocks
[0;32m    697[0m     ]
[0;32m    699[0m new_axes [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mself[39m[38;5;241m.[39maxes)
[0;32m    700[0m new_axes[axis] [38;5;241m=[39m new_axis

File [1;32m~\anaconda3\lib\site-packages\pandas\core\internals\blocks.py:1307[0m, in [0;36mBlock.take_nd[1;34m(self, indexer, axis, new_mgr_locs, fill_value)[0m
[0;32m   1304[0m     allow_fill [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m   1306[0m [38;5;66;03m# Note: algos.take_nd has upcast logic similar to coerce_to_target_dtype[39;00m
[1;32m-> 1307[0m new_values [38;5;241m=[39m [43malgos[49m[38;5;241;43m.[39;49m[43mtake_nd[49m[43m([49m
[0;32m   1308[0m [43m    [49m[43mvalues[49m[43m,[49m[43m [49m[43mindexer[49m[43m,[49m[43m [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m,[49m[43m [49m[43mallow_fill[49m[38;5;241;43m=[39;49m[43mallow_fill[49m[43m,[49m[43m [49m[43mfill_value[49m[38;5;241;43m=[39;49m[43mfill_value[49m
[0;32m   1309[0m [43m[49m[43m)[49m
[0;32m   1311[0m [38;5;66;03m# Called from three places in managers, all of which satisfy[39;00m
[0;32m   1312[0m [38;5;66;03m#  these assertions[39;00m
[0;32m   1313[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m, ExtensionBlock):
[0;32m   1314[0m     [38;5;66;03m# NB: in this case, the 'axis' kwarg will be ignored in the[39;00m
[0;32m   1315[0m     [38;5;66;03m#  algos.take_nd call above.[39;00m

File [1;32m~\anaconda3\lib\site-packages\pandas\core\array_algos\take.py:117[0m, in [0;36mtake_nd[1;34m(arr, indexer, axis, fill_value, allow_fill)[0m
[0;32m    114[0m     [38;5;28;01mreturn[39;00m arr[38;5;241m.[39mtake(indexer, fill_value[38;5;241m=[39mfill_value, allow_fill[38;5;241m=[39mallow_fill)
[0;32m    116[0m arr [38;5;241m=[39m np[38;5;241m.[39masarray(arr)
[1;32m--> 117[0m [38;5;28;01mreturn[39;00m [43m_take_nd_ndarray[49m[43m([49m[43marr[49m[43m,[49m[43m [49m[43mindexer[49m[43m,[49m[43m [49m[43maxis[49m[43m,[49m[43m [49m[43mfill_value[49m[43m,[49m[43m [49m[43mallow_fill[49m[43m)[49m

File [1;32m~\anaconda3\lib\site-packages\pandas\core\array_algos\take.py:157[0m, in [0;36m_take_nd_ndarray[1;34m(arr, indexer, axis, fill_value, allow_fill)[0m
[0;32m    155[0m     out [38;5;241m=[39m np[38;5;241m.[39mempty(out_shape, dtype[38;5;241m=[39mdtype, order[38;5;241m=[39m[38;5;124m"[39m[38;5;124mF[39m[38;5;124m"[39m)
[0;32m    156[0m [38;5;28;01melse[39;00m:
[1;32m--> 157[0m     out [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mempty[49m[43m([49m[43mout_shape[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m
[0;32m    159[0m func [38;5;241m=[39m _get_take_nd_function(
[0;32m    160[0m     arr[38;5;241m.[39mndim, arr[38;5;241m.[39mdtype, out[38;5;241m.[39mdtype, axis[38;5;241m=[39maxis, mask_info[38;5;241m=[39mmask_info
[0;32m    161[0m )
[0;32m    162[0m func(arr, indexer, out, fill_value)

[1;31mMemoryError[0m: Unable to allocate 390. MiB for an array with shape (2159, 23676) and data type float64
MemoryError: Unable to allocate 390. MiB for an array with shape (2159, 23676) and data type float64

